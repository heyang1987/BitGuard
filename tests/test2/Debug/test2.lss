
test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001e4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000ba0  00000000  00000000  00000238  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007b9  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d0 e1       	ldi	r29, 0x10	; 16
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 ee       	ldi	r30, 0xE4	; 228
  84:	f1 e0       	ldi	r31, 0x01	; 1
  86:	02 c0       	rjmp	.+4      	; 0x8c <.do_copy_data_start>

00000088 <.do_copy_data_loop>:
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0

0000008c <.do_copy_data_start>:
  8c:	a0 30       	cpi	r26, 0x00	; 0
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <.do_copy_data_loop>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 30       	cpi	r26, 0x00	; 0
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

000000ae <main>:
void a();
void b();
int c(char a, uint16_t b, int c);

int main(void){
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
  b6:	2c 97       	sbiw	r28, 0x0c	; 12
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	f8 94       	cli
  bc:	de bf       	out	0x3e, r29	; 62
  be:	0f be       	out	0x3f, r0	; 63
  c0:	cd bf       	out	0x3d, r28	; 61
	uint16_t i;
	i = 100;
  c2:	84 e6       	ldi	r24, 0x64	; 100
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	9c 83       	std	Y+4, r25	; 0x04
  c8:	8b 83       	std	Y+3, r24	; 0x03
	int j;	
	j=300;
  ca:	8c e2       	ldi	r24, 0x2C	; 44
  cc:	91 e0       	ldi	r25, 0x01	; 1
  ce:	9a 83       	std	Y+2, r25	; 0x02
  d0:	89 83       	std	Y+1, r24	; 0x01
	uint8_t s[8];
	a();
  d2:	0e 94 6e 00 	call	0xdc	; 0xdc <a>
	b();
  d6:	0e 94 92 00 	call	0x124	; 0x124 <b>
	while(1){}   
  da:	ff cf       	rjmp	.-2      	; 0xda <main+0x2c>

000000dc <a>:
}

void a(){
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	cd b7       	in	r28, 0x3d	; 61
  e2:	de b7       	in	r29, 0x3e	; 62
  e4:	23 97       	sbiw	r28, 0x03	; 3
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	f8 94       	cli
  ea:	de bf       	out	0x3e, r29	; 62
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	cd bf       	out	0x3d, r28	; 61
	uint8_t i = 9;
  f0:	89 e0       	ldi	r24, 0x09	; 9
  f2:	8b 83       	std	Y+3, r24	; 0x03
	int j = c(i, 10, 11);
  f4:	4b e0       	ldi	r20, 0x0B	; 11
  f6:	50 e0       	ldi	r21, 0x00	; 0
  f8:	6a e0       	ldi	r22, 0x0A	; 10
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	8b 81       	ldd	r24, Y+3	; 0x03
  fe:	0e 94 bd 00 	call	0x17a	; 0x17a <c>
 102:	9a 83       	std	Y+2, r25	; 0x02
 104:	89 83       	std	Y+1, r24	; 0x01
	j = i * 2;
 106:	8b 81       	ldd	r24, Y+3	; 0x03
 108:	99 27       	eor	r25, r25
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	9a 83       	std	Y+2, r25	; 0x02
 110:	89 83       	std	Y+1, r24	; 0x01
 112:	23 96       	adiw	r28, 0x03	; 3
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	f8 94       	cli
 118:	de bf       	out	0x3e, r29	; 62
 11a:	0f be       	out	0x3f, r0	; 63
 11c:	cd bf       	out	0x3d, r28	; 61
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <b>:
}

void b(){
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	26 97       	sbiw	r28, 0x06	; 6
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
	uint16_t i = 10;
 138:	8a e0       	ldi	r24, 0x0A	; 10
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	9e 83       	std	Y+6, r25	; 0x06
 13e:	8d 83       	std	Y+5, r24	; 0x05
	int j = 12;
 140:	8c e0       	ldi	r24, 0x0C	; 12
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	9c 83       	std	Y+4, r25	; 0x04
 146:	8b 83       	std	Y+3, r24	; 0x03
	int k = c(1, i, j);
 148:	8b 81       	ldd	r24, Y+3	; 0x03
 14a:	9c 81       	ldd	r25, Y+4	; 0x04
 14c:	2d 81       	ldd	r18, Y+5	; 0x05
 14e:	3e 81       	ldd	r19, Y+6	; 0x06
 150:	ac 01       	movw	r20, r24
 152:	b9 01       	movw	r22, r18
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	0e 94 bd 00 	call	0x17a	; 0x17a <c>
 15a:	9a 83       	std	Y+2, r25	; 0x02
 15c:	89 83       	std	Y+1, r24	; 0x01
	k++;
 15e:	89 81       	ldd	r24, Y+1	; 0x01
 160:	9a 81       	ldd	r25, Y+2	; 0x02
 162:	01 96       	adiw	r24, 0x01	; 1
 164:	9a 83       	std	Y+2, r25	; 0x02
 166:	89 83       	std	Y+1, r24	; 0x01
 168:	26 96       	adiw	r28, 0x06	; 6
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	f8 94       	cli
 16e:	de bf       	out	0x3e, r29	; 62
 170:	0f be       	out	0x3f, r0	; 63
 172:	cd bf       	out	0x3d, r28	; 61
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <c>:
}

int c(char a, uint16_t b, int c){
 17a:	cf 93       	push	r28
 17c:	df 93       	push	r29
 17e:	cd b7       	in	r28, 0x3d	; 61
 180:	de b7       	in	r29, 0x3e	; 62
 182:	2b 97       	sbiw	r28, 0x0b	; 11
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	f8 94       	cli
 188:	de bf       	out	0x3e, r29	; 62
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	8f 83       	std	Y+7, r24	; 0x07
 190:	79 87       	std	Y+9, r23	; 0x09
 192:	68 87       	std	Y+8, r22	; 0x08
 194:	5b 87       	std	Y+11, r21	; 0x0b
 196:	4a 87       	std	Y+10, r20	; 0x0a
	int x,y,z;
	x=a+c;
 198:	8f 81       	ldd	r24, Y+7	; 0x07
 19a:	28 2f       	mov	r18, r24
 19c:	33 27       	eor	r19, r19
 19e:	8a 85       	ldd	r24, Y+10	; 0x0a
 1a0:	9b 85       	ldd	r25, Y+11	; 0x0b
 1a2:	82 0f       	add	r24, r18
 1a4:	93 1f       	adc	r25, r19
 1a6:	9e 83       	std	Y+6, r25	; 0x06
 1a8:	8d 83       	std	Y+5, r24	; 0x05
	y=c-a;
 1aa:	8f 81       	ldd	r24, Y+7	; 0x07
 1ac:	28 2f       	mov	r18, r24
 1ae:	33 27       	eor	r19, r19
 1b0:	8a 85       	ldd	r24, Y+10	; 0x0a
 1b2:	9b 85       	ldd	r25, Y+11	; 0x0b
 1b4:	82 1b       	sub	r24, r18
 1b6:	93 0b       	sbc	r25, r19
 1b8:	9c 83       	std	Y+4, r25	; 0x04
 1ba:	8b 83       	std	Y+3, r24	; 0x03
	z=x+y;
 1bc:	2d 81       	ldd	r18, Y+5	; 0x05
 1be:	3e 81       	ldd	r19, Y+6	; 0x06
 1c0:	8b 81       	ldd	r24, Y+3	; 0x03
 1c2:	9c 81       	ldd	r25, Y+4	; 0x04
 1c4:	82 0f       	add	r24, r18
 1c6:	93 1f       	adc	r25, r19
 1c8:	9a 83       	std	Y+2, r25	; 0x02
 1ca:	89 83       	std	Y+1, r24	; 0x01
	return z;
 1cc:	89 81       	ldd	r24, Y+1	; 0x01
 1ce:	9a 81       	ldd	r25, Y+2	; 0x02
 1d0:	2b 96       	adiw	r28, 0x0b	; 11
 1d2:	0f b6       	in	r0, 0x3f	; 63
 1d4:	f8 94       	cli
 1d6:	de bf       	out	0x3e, r29	; 62
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	cd bf       	out	0x3d, r28	; 61
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	08 95       	ret

000001e2 <_exit>:
 1e2:	ff cf       	rjmp	.-2      	; 0x1e2 <_exit>
