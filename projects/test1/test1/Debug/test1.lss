
test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000002da  0000036e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000036e  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000370  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  00000a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000ad3  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000048  00000000  00000000  00000b02  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000001cc  00000000  00000000  00000b4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000000d2  00000000  00000000  00000d16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000001c1  00000000  00000000  00000de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000140  00000000  00000000  00000fac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000000e0  00000000  00000000  000010ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000002b2  00000000  00000000  000011cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000038  00000000  00000000  0000147e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	3d c0       	rjmp	.+122    	; 0x7c <__ctors_end>
   2:	00 00       	nop
   4:	a3 c0       	rjmp	.+326    	; 0x14c <__vector_1>
   6:	00 00       	nop
   8:	c3 c0       	rjmp	.+390    	; 0x190 <__vector_2>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__vector_4>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	2a c0       	rjmp	.+84     	; 0x9e <__vector_18>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
	...

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a4 30       	cpi	r26, 0x04	; 4
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	a8 d0       	rcall	.+336    	; 0x1ea <main>
  9a:	1d c1       	rjmp	.+570    	; 0x2d6 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <__vector_18>:

uint32_t system_time;

int foo(char a, uint16_t b, int c);

 ISR(TIMER0_OVF_vect) {
  9e:	1f 92       	push	r1
  a0:	0f 92       	push	r0
  a2:	00 90 5f 00 	lds	r0, 0x005F
  a6:	0f 92       	push	r0
  a8:	11 24       	eor	r1, r1
  aa:	8f 93       	push	r24
  ac:	9f 93       	push	r25
  ae:	af 93       	push	r26
  b0:	bf 93       	push	r27
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	cd b7       	in	r28, 0x3d	; 61
  b8:	de b7       	in	r29, 0x3e	; 62
	 system_time++;
  ba:	80 91 00 01 	lds	r24, 0x0100
  be:	90 91 01 01 	lds	r25, 0x0101
  c2:	a0 91 02 01 	lds	r26, 0x0102
  c6:	b0 91 03 01 	lds	r27, 0x0103
  ca:	01 96       	adiw	r24, 0x01	; 1
  cc:	a1 1d       	adc	r26, r1
  ce:	b1 1d       	adc	r27, r1
  d0:	80 93 00 01 	sts	0x0100, r24
  d4:	90 93 01 01 	sts	0x0101, r25
  d8:	a0 93 02 01 	sts	0x0102, r26
  dc:	b0 93 03 01 	sts	0x0103, r27
 }
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	bf 91       	pop	r27
  e6:	af 91       	pop	r26
  e8:	9f 91       	pop	r25
  ea:	8f 91       	pop	r24
  ec:	0f 90       	pop	r0
  ee:	00 92 5f 00 	sts	0x005F, r0
  f2:	0f 90       	pop	r0
  f4:	1f 90       	pop	r1
  f6:	18 95       	reti

000000f8 <__vector_4>:

ISR(PCINT0_vect){
  f8:	1f 92       	push	r1
  fa:	0f 92       	push	r0
  fc:	00 90 5f 00 	lds	r0, 0x005F
 100:	0f 92       	push	r0
 102:	11 24       	eor	r1, r1
 104:	8f 93       	push	r24
 106:	9f 93       	push	r25
 108:	ef 93       	push	r30
 10a:	ff 93       	push	r31
 10c:	cf 93       	push	r28
 10e:	df 93       	push	r29
 110:	1f 92       	push	r1
 112:	cd b7       	in	r28, 0x3d	; 61
 114:	de b7       	in	r29, 0x3e	; 62
	//////////////////////////////////////////////////////////////////////////
	// This is the interrupt handler for rfm12 receiving messages.
	//////////////////////////////////////////////////////////////////////////
	uint8_t i = 0;
 116:	19 82       	std	Y+1, r1	; 0x01
	if( !( PIND & _BV(PD5) ) ){
 118:	89 e2       	ldi	r24, 0x29	; 41
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	fc 01       	movw	r30, r24
 11e:	80 81       	ld	r24, Z
 120:	88 2f       	mov	r24, r24
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	80 72       	andi	r24, 0x20	; 32
 126:	99 27       	eor	r25, r25
 128:	00 97       	sbiw	r24, 0x00	; 0
 12a:	19 f4       	brne	.+6      	; 0x132 <__vector_4+0x3a>
		i++;
 12c:	89 81       	ldd	r24, Y+1	; 0x01
 12e:	8f 5f       	subi	r24, 0xFF	; 255
 130:	89 83       	std	Y+1, r24	; 0x01
	}
	
}
 132:	0f 90       	pop	r0
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	ff 91       	pop	r31
 13a:	ef 91       	pop	r30
 13c:	9f 91       	pop	r25
 13e:	8f 91       	pop	r24
 140:	0f 90       	pop	r0
 142:	00 92 5f 00 	sts	0x005F, r0
 146:	0f 90       	pop	r0
 148:	1f 90       	pop	r1
 14a:	18 95       	reti

0000014c <__vector_1>:

ISR(INT0_vect){
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	00 90 5f 00 	lds	r0, 0x005F
 154:	0f 92       	push	r0
 156:	11 24       	eor	r1, r1
 158:	8f 93       	push	r24
 15a:	9f 93       	push	r25
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	00 d0       	rcall	.+0      	; 0x162 <__vector_1+0x16>
 162:	cd b7       	in	r28, 0x3d	; 61
 164:	de b7       	in	r29, 0x3e	; 62
	uint16_t j = 1;
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	9a 83       	std	Y+2, r25	; 0x02
 16c:	89 83       	std	Y+1, r24	; 0x01
	j++;
 16e:	89 81       	ldd	r24, Y+1	; 0x01
 170:	9a 81       	ldd	r25, Y+2	; 0x02
 172:	01 96       	adiw	r24, 0x01	; 1
 174:	9a 83       	std	Y+2, r25	; 0x02
 176:	89 83       	std	Y+1, r24	; 0x01
}
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	9f 91       	pop	r25
 182:	8f 91       	pop	r24
 184:	0f 90       	pop	r0
 186:	00 92 5f 00 	sts	0x005F, r0
 18a:	0f 90       	pop	r0
 18c:	1f 90       	pop	r1
 18e:	18 95       	reti

00000190 <__vector_2>:
ISR(INT1_vect){
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	00 90 5f 00 	lds	r0, 0x005F
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
 19c:	8f 93       	push	r24
 19e:	9f 93       	push	r25
 1a0:	af 93       	push	r26
 1a2:	bf 93       	push	r27
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	cd b7       	in	r28, 0x3d	; 61
 1aa:	de b7       	in	r29, 0x3e	; 62
	system_time--;
 1ac:	80 91 00 01 	lds	r24, 0x0100
 1b0:	90 91 01 01 	lds	r25, 0x0101
 1b4:	a0 91 02 01 	lds	r26, 0x0102
 1b8:	b0 91 03 01 	lds	r27, 0x0103
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	a1 09       	sbc	r26, r1
 1c0:	b1 09       	sbc	r27, r1
 1c2:	80 93 00 01 	sts	0x0100, r24
 1c6:	90 93 01 01 	sts	0x0101, r25
 1ca:	a0 93 02 01 	sts	0x0102, r26
 1ce:	b0 93 03 01 	sts	0x0103, r27
}
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	bf 91       	pop	r27
 1d8:	af 91       	pop	r26
 1da:	9f 91       	pop	r25
 1dc:	8f 91       	pop	r24
 1de:	0f 90       	pop	r0
 1e0:	00 92 5f 00 	sts	0x005F, r0
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

000001ea <main>:

int main(void){
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	29 97       	sbiw	r28, 0x09	; 9
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
	system_time = 0;
 1fe:	10 92 00 01 	sts	0x0100, r1
 202:	10 92 01 01 	sts	0x0101, r1
 206:	10 92 02 01 	sts	0x0102, r1
 20a:	10 92 03 01 	sts	0x0103, r1
	// Initialize timer0.
	TIMSK0 |= (1<<TOIE0);	// Enable timer0 interrupt
 20e:	8e e6       	ldi	r24, 0x6E	; 110
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	2e e6       	ldi	r18, 0x6E	; 110
 214:	30 e0       	ldi	r19, 0x00	; 0
 216:	f9 01       	movw	r30, r18
 218:	20 81       	ld	r18, Z
 21a:	21 60       	ori	r18, 0x01	; 1
 21c:	fc 01       	movw	r30, r24
 21e:	20 83       	st	Z, r18
	TCCR0B |= (1<<CS00);	// No prescaler
 220:	85 e4       	ldi	r24, 0x45	; 69
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	25 e4       	ldi	r18, 0x45	; 69
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	f9 01       	movw	r30, r18
 22a:	20 81       	ld	r18, Z
 22c:	21 60       	ori	r18, 0x01	; 1
 22e:	fc 01       	movw	r30, r24
 230:	20 83       	st	Z, r18
	// Enable interrupt.
	sei();
 232:	78 94       	sei
	uint32_t l;
	l = 243;
 234:	83 ef       	ldi	r24, 0xF3	; 243
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	a0 e0       	ldi	r26, 0x00	; 0
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	89 83       	std	Y+1, r24	; 0x01
 23e:	9a 83       	std	Y+2, r25	; 0x02
 240:	ab 83       	std	Y+3, r26	; 0x03
 242:	bc 83       	std	Y+4, r27	; 0x04
	uint8_t k;
	k = 32;	
 244:	80 e2       	ldi	r24, 0x20	; 32
 246:	8d 83       	std	Y+5, r24	; 0x05
	uint16_t i;
	i = 100;
 248:	84 e6       	ldi	r24, 0x64	; 100
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	9f 83       	std	Y+7, r25	; 0x07
 24e:	8e 83       	std	Y+6, r24	; 0x06
	int j;	
	j=300;
 250:	8c e2       	ldi	r24, 0x2C	; 44
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	99 87       	std	Y+9, r25	; 0x09
 256:	88 87       	std	Y+8, r24	; 0x08
	foo(1,i,j); 
 258:	28 85       	ldd	r18, Y+8	; 0x08
 25a:	39 85       	ldd	r19, Y+9	; 0x09
 25c:	8e 81       	ldd	r24, Y+6	; 0x06
 25e:	9f 81       	ldd	r25, Y+7	; 0x07
 260:	a9 01       	movw	r20, r18
 262:	bc 01       	movw	r22, r24
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	01 d0       	rcall	.+2      	; 0x26a <foo>
	while(1){}   
 268:	ff cf       	rjmp	.-2      	; 0x268 <main+0x7e>

0000026a <foo>:
}

int foo(char a, uint16_t b, int c){
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cd b7       	in	r28, 0x3d	; 61
 270:	de b7       	in	r29, 0x3e	; 62
 272:	2b 97       	sbiw	r28, 0x0b	; 11
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	f8 94       	cli
 278:	de bf       	out	0x3e, r29	; 62
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	cd bf       	out	0x3d, r28	; 61
 27e:	8f 83       	std	Y+7, r24	; 0x07
 280:	79 87       	std	Y+9, r23	; 0x09
 282:	68 87       	std	Y+8, r22	; 0x08
 284:	5b 87       	std	Y+11, r21	; 0x0b
 286:	4a 87       	std	Y+10, r20	; 0x0a
	int x,y,z;
	x=a+c;
 288:	8f 81       	ldd	r24, Y+7	; 0x07
 28a:	28 2f       	mov	r18, r24
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	8a 85       	ldd	r24, Y+10	; 0x0a
 290:	9b 85       	ldd	r25, Y+11	; 0x0b
 292:	82 0f       	add	r24, r18
 294:	93 1f       	adc	r25, r19
 296:	9a 83       	std	Y+2, r25	; 0x02
 298:	89 83       	std	Y+1, r24	; 0x01
	y=c-a;
 29a:	8f 81       	ldd	r24, Y+7	; 0x07
 29c:	88 2f       	mov	r24, r24
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	2a 85       	ldd	r18, Y+10	; 0x0a
 2a2:	3b 85       	ldd	r19, Y+11	; 0x0b
 2a4:	a9 01       	movw	r20, r18
 2a6:	48 1b       	sub	r20, r24
 2a8:	59 0b       	sbc	r21, r25
 2aa:	ca 01       	movw	r24, r20
 2ac:	9c 83       	std	Y+4, r25	; 0x04
 2ae:	8b 83       	std	Y+3, r24	; 0x03
	z=x+y;
 2b0:	29 81       	ldd	r18, Y+1	; 0x01
 2b2:	3a 81       	ldd	r19, Y+2	; 0x02
 2b4:	8b 81       	ldd	r24, Y+3	; 0x03
 2b6:	9c 81       	ldd	r25, Y+4	; 0x04
 2b8:	82 0f       	add	r24, r18
 2ba:	93 1f       	adc	r25, r19
 2bc:	9e 83       	std	Y+6, r25	; 0x06
 2be:	8d 83       	std	Y+5, r24	; 0x05
	return z;
 2c0:	8d 81       	ldd	r24, Y+5	; 0x05
 2c2:	9e 81       	ldd	r25, Y+6	; 0x06
 2c4:	2b 96       	adiw	r28, 0x0b	; 11
 2c6:	0f b6       	in	r0, 0x3f	; 63
 2c8:	f8 94       	cli
 2ca:	de bf       	out	0x3e, r29	; 62
 2cc:	0f be       	out	0x3f, r0	; 63
 2ce:	cd bf       	out	0x3d, r28	; 61
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	08 95       	ret

000002d6 <_exit>:
 2d6:	f8 94       	cli

000002d8 <__stop_program>:
 2d8:	ff cf       	rjmp	.-2      	; 0x2d8 <__stop_program>
