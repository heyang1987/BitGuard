sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=2, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=2, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
plot(f, p, type = "l", lty = 5, lwd=2, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
#dev.off()
setwd("D:/zjn/Dropbox/Research/BitGuard/paper/usenix_2014/figures")
#f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#c<-20
#e<-2048
#s<-100
#y<-2
#l<-50
#m<-10^7
#n<-y * l * f / m
#p=ifelse( f<200000, 0.9906890130353818 + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
#plot(f, p, type = "l", lwd=2, pch=6, col = "blueviolet", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "Successful SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
#abline(v=100000,lty=2)
#par(new=TRUE)
#pdf("success_probability_v3.pdf", width=10, height=5)
f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#Delay
c<-16
e<-3022
s<-30
y<-2
l<-115
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=2, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=2, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
plot(f, p, type = "l", lty = 5, lwd=2, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
#dev.off()
setwd("D:/zjn/Dropbox/Research/BitGuard/paper/usenix_2014/figures")
#f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#c<-20
#e<-2048
#s<-100
#y<-2
#l<-50
#m<-10^7
#n<-y * l * f / m
#p=ifelse( f<200000, 0.9906890130353818 + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
#plot(f, p, type = "l", lwd=2, pch=6, col = "blueviolet", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "Successful SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
#abline(v=100000,lty=2)
#par(new=TRUE)
#pdf("success_probability_v3.pdf", width=10, height=5)
f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#Delay
c<-16
e<-3022
s<-30
y<-2
l<-115
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=2, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n")
axis(1, cex.axis=2)
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=2, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
plot(f, p, type = "l", lty = 5, lwd=2, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
#dev.off()
# TODO: Add comment
#
# Author: jonas
###############################################################################
setwd("D:/zjn/Dropbox/Research/BitGuard/paper/usenix_2014/figures")
#f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#c<-20
#e<-2048
#s<-100
#y<-2
#l<-50
#m<-10^7
#n<-y * l * f / m
#p=ifelse( f<200000, 0.9906890130353818 + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
#plot(f, p, type = "l", lwd=2, pch=6, col = "blueviolet", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "Successful SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
#abline(v=100000,lty=2)
#par(new=TRUE)
#pdf("success_probability_v3.pdf", width=10, height=5)
f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#Delay
c<-16
e<-3022
s<-30
y<-2
l<-115
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=2, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=2, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 5, lwd=2, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
axis(1, cex.axis=1.2)
axis(2, cex.axis=1.2)
#dev.off()
# TODO: Add comment
#
# Author: jonas
###############################################################################
setwd("D:/zjn/Dropbox/Research/BitGuard/paper/usenix_2014/figures")
#f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#c<-20
#e<-2048
#s<-100
#y<-2
#l<-50
#m<-10^7
#n<-y * l * f / m
#p=ifelse( f<200000, 0.9906890130353818 + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
#plot(f, p, type = "l", lwd=2, pch=6, col = "blueviolet", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "Successful SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
#abline(v=100000,lty=2)
#par(new=TRUE)
#pdf("success_probability_v3.pdf", width=10, height=5)
f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#Delay
c<-16
e<-3022
s<-30
y<-2
l<-115
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=2, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=2, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 5, lwd=2, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
axis(1, cex.axis=1.5)
axis(2, cex.axis=1.5)
#dev.off()
# TODO: Add comment
#
# Author: jonas
###############################################################################
setwd("D:/zjn/Dropbox/Research/BitGuard/paper/usenix_2014/figures")
#f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#c<-20
#e<-2048
#s<-100
#y<-2
#l<-50
#m<-10^7
#n<-y * l * f / m
#p=ifelse( f<200000, 0.9906890130353818 + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
#plot(f, p, type = "l", lwd=2, pch=6, col = "blueviolet", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "Successful SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
#abline(v=100000,lty=2)
#par(new=TRUE)
#pdf("success_probability_v3.pdf", width=10, height=5)
f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#Delay
c<-16
e<-3022
s<-30
y<-2
l<-115
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=2, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n", cex.lab=1.5)
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=2, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 5, lwd=2, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
axis(1, cex.axis=1.5)
axis(2, cex.axis=1.5)
#dev.off()
# TODO: Add comment
#
# Author: jonas
###############################################################################
setwd("D:/zjn/Dropbox/Research/BitGuard/paper/usenix_2014/figures")
#f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#c<-20
#e<-2048
#s<-100
#y<-2
#l<-50
#m<-10^7
#n<-y * l * f / m
#p=ifelse( f<200000, 0.9906890130353818 + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
#plot(f, p, type = "l", lwd=2, pch=6, col = "blueviolet", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "Successful SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
#abline(v=100000,lty=2)
#par(new=TRUE)
#pdf("success_probability_v3.pdf", width=10, height=5)
f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#Delay
c<-16
e<-3022
s<-30
y<-2
l<-115
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=2, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n", cex.lab=1.5)
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=2, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 5, lwd=3, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
axis(1, cex.axis=1.5)
axis(2, cex.axis=1.5)
#dev.off()
# TODO: Add comment
#
# Author: jonas
###############################################################################
setwd("D:/zjn/Dropbox/Research/BitGuard/paper/usenix_2014/figures")
#f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#c<-20
#e<-2048
#s<-100
#y<-2
#l<-50
#m<-10^7
#n<-y * l * f / m
#p=ifelse( f<200000, 0.9906890130353818 + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("failure_probability_v2.pdf", width=10, height=5)
#plot(f, p, type = "l", lwd=2, pch=6, col = "blueviolet", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "Successful SEU Protection Probability", xlab = "SEU Injection Rate", log = "x")
#abline(v=100000,lty=2)
#par(new=TRUE)
#pdf("success_probability_v3.pdf", width=10, height=5)
f=seq(0.00000001, 6 * 10 ^ 8, 100000)
#Delay
c<-16
e<-3022
s<-30
y<-2
l<-115
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
#pdf("success_probability_v1.pdf", width=10, height=5)
plot(f, p, type = "l", lty=3, lwd=3, pch=6, col = "green", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n", cex.lab=1.5)
abline(v=lim,lty=1,col="green")
par(new=TRUE)
#DFC
c<-9
e<-3022
s<-30
y<-2
l<-54
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 1, lwd=3, pch=6, col = "red", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=3,col="red")
par(new=TRUE)
#F
c<-10
e<-2990
s<-60
y<-2
l<-42
m<-10^7
n<-y * l * f / m
lim<-m * 2 / y / l
sh<-(s + e - c) / (s + e)
sh
p=ifelse( f<lim, sh + f - f, ( 1 - c / (s + e) ) ^ n * ( ( 1 - 6 / (s + e - c) ) ^ n + 3 * ( ( 1 - 4 / (s + e - c) ) ^ n * ( 1 - ( 1 - 2 / (s + e - c - 4) ) ^ n ) ) )  )
plot(f, p, type = "l", lty = 5, lwd=3, pch=6, col = "blue", xlim = c(1, 6 * 10 ^ 8), ylim = c(0,1), ylab = "SEU Protection Probability", xlab = "SEU Injection Rate", log = "x", xaxt="n", yaxt="n")
abline(v=lim,lty=5,col="blue")
legend(1, 0.6, c("Delay","Double Function Calls","Fibonacci"), lwd=c(2,2,2), lty=c(3,1,5), col=c("green","red","blue"), cex=1.6 )
axis(1, cex.axis=1.5)
axis(2, cex.axis=1.5)
#dev.off()
